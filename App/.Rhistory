install.packages("tidyverse")
install.packages("readxl")
library(tidyverse)
library(readxl)
data <- read_excel("C:\Users\Ethel Ogallo\Documents\WS24\IP-SDI\Assignments\Assignment 3\world population.xlsx", sheet = 1)
data <- read_excel("C:/Users/Ethel Ogallo/Documents/WS24/IP-SDI/Assignments/Assignment 3/world population.xlsx", sheet = 1)
View(data)
data_long <- data %>%
pivot_longer(cols = `1960`:`2023`,
names_to = "year",
values_to = "population")
head(data_long)
write.csv(data_long, "C:/Users/Ethel Ogallo/Documents/WS24/IP-SDI/Assignments/Assignment 3/world_population.csv", row.names=FALSE)
library(tidyverse)
library(readxl)
data <- read_excel("C:/Users/Ethel Ogallo/Documents/WS24/IP-SDI/Assignments/Assignment 3/world population.xlsx", sheet = 1)
write.csv(data, "C:/Users/Ethel Ogallo/Documents/WS24/IP-SDI/Assignments/Assignment 3/world_population2.csv", row.names=FALSE)
shiny::runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
View(employment_data)
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
shiny::runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
# 1. Load packages----
pacman::p_load(sf,
ggplot2,
shiny,
plotly,
dplyr,
tidyr,
gganimate,
lubridate,
shinydashboard,
shinyjs,
shinythemes,
shinyWidgets,
shinycssloaders,
RColorBrewer,
gridGraphics,
ggiraph,
gghighlight,
shinyjs,
viridis)
## Request data from WFS ----
wfs_url <- "https://geoserver22s.zgis.at/geoserver/IPSDI_WT24/wfs?"
wfs_request <- paste0(
wfs_url,
"?service=WFS",
"&version=1.0.0",
"&request=GetFeature",
"&typeName=IPSDI_WT24:austria_employment_data_DEFGA",
"&outputFormat=application/json"
)
# Read the Data from WFS
employment_data <- st_read(dsn = wfs_request, quiet = FALSE)
# Read the Data from WFS
employment_data <- st_read(dsn = wfs_request, quiet = FALSE)
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App/test_app.R')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App/test_app.R')
str(employment_data)
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App/testapp.R')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App/test_app.R')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App/test_app.R')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App/test_app.R')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App/test_app.R')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
download.file("https://curl.se/ca/cacert.pem", destfile = "cacert.pem")
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
runApp('WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App')
#SSL certificate for the WFS
download.file("https://curl.se/ca/cacert.pem", destfile = "www/cacert.pem")
setwd("~/WS24/IP-SDI/IPSDI_PROJECT/DEFGA/App")
#SSL certificate for the WFS
download.file("https://curl.se/ca/cacert.pem", destfile = "www/cacert.pem")
Sys.setenv(CURL_CA_BUNDLE = "www/cacert.pem")
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
